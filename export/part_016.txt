namespace Processors;

public class UserSocialMediaProcessor : BaseProcessor<UserEventDto>
{
    public override void Process(string jsonInput, TextWriter output)
    {
        var userEventDto = Deserialize(jsonInput);
        if (userEventDto?.User?.SocialMedia != null)
        {
            var socialMedia = userEventDto.User.SocialMedia;
            output.WriteLine("Social Media Profiles:");
            output.WriteLine($"Facebook: {socialMedia.Facebook}");
            output.WriteLine($"Twitter: {socialMedia.Twitter}");
            output.WriteLine($"Instagram: {socialMedia.Instagram}");
        }
        else
        {
            WriteNoDataMessage(output, "social media profiles");
        }
    }
} 

-- README.md --
# Usage Analyzer

A .NET solution for processing and analyzing user event data.

For a high-level overview of the codebase, see [docs/CodebaseOverview.md](docs/CodebaseOverview.md).

## Project Structure

The solution consists of the following projects:

- **Dto**: Contains data transfer objects used for deserializing user event data
- **Processors**: Contains processors for handling different types of user data
- **Dto.Tests**: Unit tests for the DTO project
- **Processors.Tests**: Unit tests for the Processors project
- **Analyze**: Main application project for analyzing user data

## Getting Started

### Prerequisites

- .NET 8.0 SDK or later
- Your favorite IDE (Visual Studio, VS Code, etc.)

### Building the Solution

```bash
dotnet build
```

### Running the Application

To run the Analyze application:

```bash
cd Analyze
dotnet run
```

The application is a DTO Usage Analyzer that helps you understand how DTO classes and their properties are used throughout your solution. It provides:

1. A selection of DTO classes to analyze
2. Analysis of property usage across the solution
3. Detailed reports showing:
   - Total usage count for each property
   - Usage distribution across different files
   - Identification of unused properties

The tool helps identify:
- Which DTO properties are most frequently used
- Where specific properties are being accessed
- Potentially unused properties that might be candidates for removal

### Running Tests

The solution includes comprehensive unit tests for both DTOs and Processors. Run the tests using:

```bash
dotnet test
```

## Usage

The solution provides several processors for handling different types of user data:

- `UserAddressProcessor`: Processes user address information
- `UserPreferencesProcessor`: Processes user preferences (theme, language, notifications, etc.)
- `UserDeviceInfoProcessor`: Processes device information (device type, OS, browser, IP)
- `UserSocialMediaProcessor`: Processes social media profiles
- `ActivityLogProcessor`: Processes user activity logs
- `UserEventProcessor`: Processes general event information
- `UserProcessor`: Processes core user information (profile, preferences, activity)

Example usage:

```csharp
// Create a processor instance
var processor = new UserAddressProcessor();

// Process the JSON input
using var writer = new StringWriter();
processor.Process(jsonInput, writer);
var result = writer.ToString();
```

Each processor follows the same pattern:
1. Takes JSON input containing user event data
2. Deserializes the data into appropriate DTOs
3. Processes the data and writes formatted output to a TextWriter

## License

This project is licensed under the MIT License.

-- UsageAnalyzer.sln --
ï»¿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.0.31903.59
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Dto", "Dto\Dto.csproj", "{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Processors", "Processors\Processors.csproj", "{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}"
	ProjectSection(ProjectDependencies) = postProject
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89} = {E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}
	EndProjectSection
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Dto.Tests", "Dto.Tests\Dto.Tests.csproj", "{4DBBB78A-5FFF-4E82-AEC0-E3B64654FB53}"
	ProjectSection(ProjectDependencies) = postProject
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89} = {E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}
	EndProjectSection
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Processors.Tests", "Processors.Tests\Processors.Tests.csproj", "{864F2924-304C-4744-BDE3-E2EB3310AC2F}"
	ProjectSection(ProjectDependencies) = postProject
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89} = {E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}
	EndProjectSection
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Analyze", "Analyze\Analyze.csproj", "{05BF502A-CCF2-4B60-8E29-7DAED5866A14}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Analyze.Tests", "Analyze.Tests\Analyze.Tests.csproj", "{FAA7AD07-59CB-43F5-9457-B7CAAAF2D180}"
        ProjectSection(ProjectDependencies) = postProject
                {05BF502A-CCF2-4B60-8E29-7DAED5866A14} = {05BF502A-CCF2-4B60-8E29-7DAED5866A14}
                {E67BABBB-6AB9-4EDB-9EAD-57A49939FE89} = {E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}
        EndProjectSection
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|Any CPU = Release|Any CPU
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Debug|x64.ActiveCfg = Debug|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Debug|x64.Build.0 = Debug|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Debug|x86.ActiveCfg = Debug|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Debug|x86.Build.0 = Debug|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Release|Any CPU.Build.0 = Release|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Release|x64.ActiveCfg = Release|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Release|x64.Build.0 = Release|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Release|x86.ActiveCfg = Release|Any CPU
		{E67BABBB-6AB9-4EDB-9EAD-57A49939FE89}.Release|x86.Build.0 = Release|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Debug|x64.ActiveCfg = Debug|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Debug|x64.Build.0 = Debug|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Debug|x86.ActiveCfg = Debug|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Debug|x86.Build.0 = Debug|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Release|Any CPU.Build.0 = Release|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Release|x64.ActiveCfg = Release|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Release|x64.Build.0 = Release|Any CPU
		{679A324D-3FCE-4F9B-85E5-DBAE9F429AD6}.Release|x86.ActiveCfg = Release|Any CPU
